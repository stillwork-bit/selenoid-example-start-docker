#1. docker ps — смотрим список запущенных контейнеров
#2. docker pull — загрузка образа
Как правило, образы создаются на основе базового — из Docker Hub, где есть множество уже готовых образов и которые ты можешь использовать, а не тратить время на создание собственного. Для загрузки образа используется команда docker pull.
#3. docker build — собирает образ
Данная команда собирает образ Docker из файла докера (dockerfile) и контекста сборки. Контекст сборки — это набор файлов, расположенных по определенному пути. Для задания имени образа используйте параметр -t, например, «docker build -t my.». Собирает образ из текущего каталога (».«) — последний параметр это имя каталога, в нашем случае точка указывает, что каталог — текущий.
#4. docker logs — смотрим логи
Позволяет просмотреть логи указанного контейнера. Можно использовать флаг -follow, чтобы следить за логами работающего контейнера, например, docker logs -follow my.
#5. docker run — запускаем контейнер
Запускает контейнер на основе указанного образа. Пример команды docker run my -it bash В данном случае будет запущен контейнер из образа my, а после в нем будет запущен bash.
#6. docker stop — останавливает контейнер
Используется для «мягкой» остановки контейнера. Пример: docker stop my_cont. Можно остановить не конкретный контейнер, а все запущенные — docker stop $(docker ps -a -q).
#7. docker kill — «убивает» контейнер
Не пытается аккуратно завершить процесс, подобна системной команде kill. Как и в предыдущем случае, можно «убить» все контейнеры: docker kill $(ps -a -q).
#8. docker rm — удаляет контейнер
Для удаления контейнера используется команда docker rm, например, docker rm my_cont.
#9. docker rmi — удаляет образ
Команда docker rmi (i от image) удаляет образ, например, docker rmi my.
#10. docker volume ls — список томов
Данная команда показывает список томов, которые являются основным механизмом для хранения данных, генерируемых контейнерами Docker.

docker network ls

--from=build
kubernetes.docker.internal

docker build -t testmaven .
docker run --rm -it testmaven /bin/bash

sed -i -e 's/\r$//' ./start_test.sh

docker run --volume=C:\project\ui-test:/app --rm -it maven:3.6.3-jdk-11 /bin/bash
